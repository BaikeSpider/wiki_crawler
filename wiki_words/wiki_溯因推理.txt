溯因推理
溯因法或溯因推理（英语：abductive reasoning，也译作反绎推理），是推理到最佳解释的过程。换句话说，它是开始于事实的集合，并推导出其最佳解释的推理过程。有时使用术语溯因（abduction）意味生成假设来解释观察或结论，但是前者定义在哲学和计算二者中更常见。
演绎和溯因区别在于推理中使用“



a


{\displaystyle a}

 蕴涵



b


{\displaystyle b}

”这种规则的方向（与归纳的比较请参见逻辑推理）:
（以下b=结果）。（a=原因）

演绎：允许推导



b


{\displaystyle b}

作为



a


{\displaystyle a}

的结论，换句话说，演绎是推导已知事物的推论；


溯因：允许推导



a


{\displaystyle a}

作为



b


{\displaystyle b}

的解释，溯因同演绎反向，通过允许“



a


{\displaystyle a}

蕴涵



b


{\displaystyle b}

”的前件



a


{\displaystyle a}

推导自结论



b


{\displaystyle b}

；换句话说，溯因是解释已知事物的过程。

在罕见的场合，使用表达“解释结论”而不是“解释”来指名溯因过程的结果。
应用于人工智能中，包括故障诊断、信念修正和自动计划。



目录


1 基于逻辑的溯因
2 集合覆盖溯因
3 概念的历史
4 应用
5 参见
6 引用
7 外部链接



基于逻辑的溯因[编辑]
在逻辑中，溯因法通过表示领域的逻辑理论



T


{\displaystyle T}

和观察的集合



O


{\displaystyle O}

进行的。溯因是依据



T


{\displaystyle T}

推导



O


{\displaystyle O}

的解释的集合。



E


{\displaystyle E}

要成为



O


{\displaystyle O}

依据



T


{\displaystyle T}

的解释，它应当满足两个条件：





O


{\displaystyle O}

推导自



E


{\displaystyle E}

和



T


{\displaystyle T}

；






E


{\displaystyle E}

相容于



T


{\displaystyle T}

。

在形式逻辑中，假定



O


{\displaystyle O}

和



E


{\displaystyle E}

为文字的集合。



E


{\displaystyle E}

是



O


{\displaystyle O}

依据理论



T


{\displaystyle T}

的解释的两个条件则形式化为：





T
∪
E
⊨
O


{\displaystyle T\cup E\models O}

；




T
∪
E


{\displaystyle T\cup E}

是相容的。

在满足这两个条件的可能的解释



E


{\displaystyle E}

之中，通常施加一些其他的最小性条件来避免无关的事实（对



O


{\displaystyle O}

的蕴涵没有贡献）包含在解释中。
集合覆盖溯因[编辑]
溯因法的一种不同的形式化是基于逆转计算假设的可见效果的函数。形式化的说，我们给出假设的集合



H


{\displaystyle H}

和表现（manifestation）的集合



M


{\displaystyle M}

；它们相关于领域知识，并以函数



e


{\displaystyle e}

所表示，这个函数接受假设的集合作为参数并给出对应的表现的集合作为结果。换句话说，对于假设的所有子集




H
′

⊆
H


{\displaystyle H'\subseteq H}

，它们的效果通过



e
(

H
′

)


{\displaystyle e(H')}

来知道。
溯因法通过找到一个集合




H
′

⊆
H


{\displaystyle H'\subseteq H}

，使得



M
⊆
e
(

H
′

)


{\displaystyle M\subseteq e(H')}

进行的。换句话说，溯因是通过找到假设的集合




H
′



{\displaystyle H'}

，使得它们的效果



e
(

H
′

)


{\displaystyle e(H')}

包含所有的观察



M


{\displaystyle M}

来进行的。
公共的假定是假设的效果是独立的，就是说，对于所有的




H
′

⊆
H


{\displaystyle H'\subseteq H}

，



e
(

H
′

)
=

⋃

h
∈

H
′



e
(
{
h
}
)


{\displaystyle e(H')=\bigcup _{h\in H'}e(\{h\})}

成立。如果这些条件满足，溯因法就可看作集合覆盖的一种形式。
概念的历史[编辑]
哲学家查尔斯·桑德斯·皮尔士把溯因法引入至现代逻辑。在他1900年前的工作中，他主要使用这个术语来意味使用规则来解释观察，比如“如果下雨则草地是湿的”是用来解释草地是湿的的已知规则。
他后来使用这个术语来意味建立解释新观察的新规则，强调溯因法是实际上建立任何新东西的唯一逻辑过程。也就是，他把科学的过程描述为溯因、演绎和蕴涵的组合，强调新知识只能通过溯因建立。
这与在社会科学和人工智能中使用旧含义溯因的常见用法相反。皮尔士声称产生新规则的实际过程不受逻辑规则的“牵制”。他指出人们拥有先天能力来正确的做推理；将拥有这种能力解释为进化带来的好处。皮尔士对'溯因'的第二种用法类似于归纳法。
应用[编辑]
溯因法已经应用于人工智能的各种任务。溯因法的最直接的应用是自动检测系统中的故障：给出与有关故障和表现的理论和一组故障（故障的可见效果），可以使用溯因法来推导故障的某个集合好像是问题的原因。
溯因法也用于建模自动计划。给定与动作事件和它们的效果（例如事件演算的公式）有关的逻辑理论，找到达到一个状态的计划的问题可以建模为溯因蕴涵着最终状态是目的状态的文字的序列的问题。
信念修正，由于新信息而调整信仰的过程，是应用溯因法的另一个领域。信仰修正的主要问题是新信息可能与信仰的结集相矛盾，但是结合的结果不能是矛盾的。这个过程可以通过使用溯因法来完成：一旦对观察的一个解释已经找到，整合它不产生矛盾。溯因的这种用法不是直接的，因为向其他命题公式集增加命题公式只能使矛盾更糟糕。转而，溯因是在排序可能世界的优先级的层次上进行的。
参见[编辑]

查尔斯·桑德斯·皮尔士
演绎推理
可废止推理
归纳推理
逻辑
逻辑推理
推理过程
逆推法

引用[编辑]

T. Eiter and G. Gottlob (1995). The complexity of logic-based abduction. Journal of the ACM, 42 (1):3-42.


T. Menzies. Applications of abduction: knowledge-level modelling. International Journal of Human-Computer Studies（1996）, 45 (3):305-335.


Josephson, John R. and Josephson, Susan G.,（ed.，1994）Abductive Inference: Computation, Philosophy, Technology, Cambridge University Press.

外部链接[编辑]

John Josephson's page on abduction
Is there a Logic of Exploratory Data Analysis?

本条目部分或全部内容出自以GFDL授权发布的《自由线上电脑词典》（FOLDOC）。




分类：逻辑隐藏分类：含有英语的条目含有来自FOLDOC内容的维基百科条目