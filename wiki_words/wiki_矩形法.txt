矩形法


系列條目


微积分学





函数
导数
微分
积分




基本定理




函數極限
連續函數




均值定理
羅爾定理







基础概念



函数 · 數列 · 級數 · 极限
初等函数 · 無窮小量 · 收敛数列
收斂性 · 夹挤定理
连续 · 一致连续 · 间断点









一元微分



导数 · 高阶导数 · 介值定理 · 中值定理（罗尔定理 · 拉格朗日中值定理 · 柯西中值定理） · 泰勒公式 · 求导法则（乘法定则 · 除法定则 · 倒数定则 · 链式法则） · 洛必达法则 · 导数列表 · 导数的函数应用（单调性 · 极值 · 驻点 · 拐点 · 凹凸性 · 曲率）









一元积分



不定积分 · 定积分 · 积分的定义（黎曼积分 · 达布积分 · 勒贝格积分） · 积分表 · 求积分的技巧（吸納积分法 · 换元积分法 · 分部积分法 · 三角换元法 · 降次积分法 · 部分分式积分法） · 牛顿-莱布尼茨公式 · 广义积分 · 主值 · 柯西主值 · Β函数 · Γ函数 · 数值积分 · 牛顿-寇次公式 · 近似积分法（矩形法 · 梯形法 · 辛普森积分法）









多元微积分



多元函数 · 偏导数 · 隐函数 · 全微分 · 方向導數 · 梯度 · 泰勒公式 · 拉格朗日乘数 · 多元函数积分 · 多重积分 · 广义多重积分 · 曲线积分 · 曲面积分 · 格林公式 · 高斯公式 · 斯托克斯公式 · 散度 · 旋度









微分方程



常微分方程 · 分离变数法 · 积分因子 · 欧拉方法 · 柯西-欧拉方程 · 伯努利微分方程 · 克莱罗方程 · 全微分方程 · 线性微分方程 · 差分方程 · 拉普拉斯变换法 · 偏微分方程 · 拉普拉斯方程









相关数学家


牛顿 · 莱布尼兹 · 柯西 · 黎曼
拉格朗日 · 拉普拉斯 · 欧拉









查
论
编





微积分中，矩形法是一种计算定积分近似值的方法，其思想是求若干个矩形的面积之和，这些矩形的高由函数值来决定。[1]

将积分区间 



(
a
,
b
)


{\displaystyle (a,b)}

 划分为 



n


{\displaystyle n}

 个长度相等的子区间，每个子区间的长度为 



Δ
x
=



b
−
a

n




{\displaystyle \Delta x={\frac {b-a}{n}}}

 。这些矩形左上角、右上角或顶边中点在被积函数图像上。这样，这些矩形的面积之和就约等于定积分的近似值。有：






∫

a


b


f
(
x
)



d


x
≈

∑

i
=
1


n


f
(
a
+

i
′

Δ
x
)
Δ
x


{\displaystyle \int _{a}^{b}f(x)\,{\mbox{d}}x\approx \sum _{i=1}^{n}f(a+i'\Delta x)\Delta x}



其中




i
′



{\displaystyle i'}

可以是以下三个值 



i
−


1
2




{\displaystyle i-{\frac {1}{2}}}

， 



i


{\displaystyle i}

 ， 



i
+


1
2




{\displaystyle i+{\frac {1}{2}}}

之一，由函数图像上的点为矩形的左上角、右上角或顶边中点来决定。
当 n 逐渐扩大时，此近似值更加准确。矩形法的计算本质上是与黎曼积分的定义相吻合的。上述的




i
′



{\displaystyle i'}

无论取哪个值，最终和式的值都将趋近于定积分的值。[2]












i
′

=
i
−


1
2




{\displaystyle i'=i-{\frac {1}{2}}}









目录


1 C 语言代码
2 Fortran 语言代码
3 注释与参考
4 另见



C 语言代码[编辑]


#include <stdio.h>
#include <math.h>

double f(double x){
   return sin(x);
   /*也可以回传其他数学子程序,像cos(2*x)或2*atan(3*x+1)-1*/
}

double rectangle_integrate(double a, double b, int subintervals){
   double result;
   double interval;
   int i;
   
   interval=(b-a)/subintervals;
   result=0;
   
   for(i=1;i<=subintervals;i++){
      result+=f(a+interval*(i-0.5));
   }
   result*=interval;

   return result;
}

int main(void){
   double integral;
   integral=rectangle_integrate(0,2,100);
   printf("Integral: %f \n",integral);
   return 0;
}

Fortran 语言代码[编辑]


      
      Program Calc

      Double Precision f,y,a,b,J,mult,sum,c1,c2
      Sum=0.0
      c2=0.0
      c1=0.0

      Print*,'Enter the start and end of the interval'
      Read*,a,b
      If (b.gt.a) then
         goto 1
      Else
         goto 2
      End If
      
  1   Do J=a,b,.00000001
         c1=J
         Y=F(((c1+c2)/2))
         Mult=Y*.00000001
         Sum=sum+mult
         c2=c1
      End Do

  2   Do J=a,b,-.00000001
         c1=J
         Y=F(((c1+c2)/2))
         Mult=Y*.00000001
         Sum=sum+mult
         c2=c1
      End Do

      Print*,Sum
  3   Format (F20.5)
      End

      Double Precision Function f(x)
      Double Precision x

      F=(4)/((x**2)+1)

      Return
      End

注释与参考[编辑]

^ 同济大学数学教研室. 《高等数学》 第三版. 高等教育出版社. 1988年4月: 319. ISBN 7-04-000894-7. 
^ 李忠、周建莹. 《高等数学》 第二版. 北京大学出版社. 2009年8月: 166~167. ISBN 978-7-301-15597-4. 

另见[编辑]

梯形法
辛普森法





分类：数值积分